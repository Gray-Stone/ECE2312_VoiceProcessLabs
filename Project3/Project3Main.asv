clear 
clc 


filename = "audioclip-1581903146-7894.wav";
[recData, fs] = audioread( filename );
recLength = length(recData);
speechFs =  16000 ;  % 8000 Hz for speech data, (sampling feq multiply by 2) the frequency choosen for speech frequency. 


% Plot origional data 
figure(1)
SpectrogramPlot(recData,fs);
title("Origional Signal");

% generate speech only

biasFeq = 0; % incase of previous signal comes from the upper HP part
origionalFs = fs;
origionalData = recData;
downFs = speechFs;
% filter and downsample
downData = FIRLowPass(origionalData,origionalFs , biasFeq/2 + downFs/2 - 1 , biasFeq/2 + downFs/2+1);
downData = downIntSample(downData,origionalFs/downFs);
figure(2); % plot 
SpectrogramPlot(  downData , downFs);
title("speach content only");





biasFeq = 0; % incase of previous signal comes from the upper HP part
origionalFs = downFs;
origionalData = downFs;
downFs = speechFs;
% filter and downsample
downData = FIRLowPass(origionalData,origionalFs , biasFeq/2 + downFs/2 - 1 , biasFeq/2 + downFs/2+1);
downData = downIntSample(downData,origionalFs/downFs);
figure(2); % plot 
SpectrogramPlot(  downData , downFs);
title("speach content only");




function   [] = foldHalf( sourceDa )

end


% something that should work, but didn't 
% rec24Data = FIRBandPass(recData , fs , 1000 , 2000);
% rec24Data = downIntSample(rec24Data , fs/speechFs);
% rec24Data = downIntSample(rec24Data , speechFs / (speechFs/2) );
% rec24Data = downIntSample(rec24Data , (speechFs/2) / (speechFs/4)  );
% rec24Data = downIntSample(rec24Data , (speechFs/4) / (speechFs/8)  );
% 
% figure(3)
% SpectrogramPlot(  rec24Data , 2000)
% title("2000- 4000")
